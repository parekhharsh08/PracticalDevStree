// Generated by view binder compiler. Do not edit!
package com.app.practicaldevstree.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.practicaldevstree.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMapScreenBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatEditText etAddress;

  @NonNull
  public final FragmentContainerView googleMap;

  @NonNull
  public final MaterialCardView layoutAddress;

  @NonNull
  public final DialogLocationBinding layoutDialog;

  @NonNull
  public final Toolbar toolbar;

  private ActivityMapScreenBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatEditText etAddress, @NonNull FragmentContainerView googleMap,
      @NonNull MaterialCardView layoutAddress, @NonNull DialogLocationBinding layoutDialog,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.etAddress = etAddress;
    this.googleMap = googleMap;
    this.layoutAddress = layoutAddress;
    this.layoutDialog = layoutDialog;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMapScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMapScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_map_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMapScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.etAddress;
      AppCompatEditText etAddress = ViewBindings.findChildViewById(rootView, id);
      if (etAddress == null) {
        break missingId;
      }

      id = R.id.google_map;
      FragmentContainerView googleMap = ViewBindings.findChildViewById(rootView, id);
      if (googleMap == null) {
        break missingId;
      }

      id = R.id.layout_address;
      MaterialCardView layoutAddress = ViewBindings.findChildViewById(rootView, id);
      if (layoutAddress == null) {
        break missingId;
      }

      id = R.id.layout_dialog;
      View layoutDialog = ViewBindings.findChildViewById(rootView, id);
      if (layoutDialog == null) {
        break missingId;
      }
      DialogLocationBinding binding_layoutDialog = DialogLocationBinding.bind(layoutDialog);

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityMapScreenBinding((ConstraintLayout) rootView, etAddress, googleMap,
          layoutAddress, binding_layoutDialog, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
