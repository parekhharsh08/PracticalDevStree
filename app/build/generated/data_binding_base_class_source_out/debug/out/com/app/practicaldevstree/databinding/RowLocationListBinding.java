// Generated by view binder compiler. Do not edit!
package com.app.practicaldevstree.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.practicaldevstree.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowLocationListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final ImageView imgDelete;

  @NonNull
  public final ImageView imgEdit;

  @NonNull
  public final TextView txtPlaceAddress;

  @NonNull
  public final TextView txtPlaceName;

  private RowLocationListBinding(@NonNull ConstraintLayout rootView, @NonNull Guideline guideline,
      @NonNull ImageView imgDelete, @NonNull ImageView imgEdit, @NonNull TextView txtPlaceAddress,
      @NonNull TextView txtPlaceName) {
    this.rootView = rootView;
    this.guideline = guideline;
    this.imgDelete = imgDelete;
    this.imgEdit = imgEdit;
    this.txtPlaceAddress = txtPlaceAddress;
    this.txtPlaceName = txtPlaceName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowLocationListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowLocationListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_location_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowLocationListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.img_delete;
      ImageView imgDelete = ViewBindings.findChildViewById(rootView, id);
      if (imgDelete == null) {
        break missingId;
      }

      id = R.id.img_edit;
      ImageView imgEdit = ViewBindings.findChildViewById(rootView, id);
      if (imgEdit == null) {
        break missingId;
      }

      id = R.id.txt_place_address;
      TextView txtPlaceAddress = ViewBindings.findChildViewById(rootView, id);
      if (txtPlaceAddress == null) {
        break missingId;
      }

      id = R.id.txt_place_name;
      TextView txtPlaceName = ViewBindings.findChildViewById(rootView, id);
      if (txtPlaceName == null) {
        break missingId;
      }

      return new RowLocationListBinding((ConstraintLayout) rootView, guideline, imgDelete, imgEdit,
          txtPlaceAddress, txtPlaceName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
