// Generated by Dagger (https://dagger.dev).
package com.app.practicaldevstree.di;

import com.app.practicaldevstree.data.local.AppDataBase;
import com.app.practicaldevstree.data.local.LocationDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvideLocationDaoFactory implements Factory<LocationDao> {
  private final Provider<AppDataBase> dbProvider;

  public AppModule_ProvideLocationDaoFactory(Provider<AppDataBase> dbProvider) {
    this.dbProvider = dbProvider;
  }

  @Override
  public LocationDao get() {
    return provideLocationDao(dbProvider.get());
  }

  public static AppModule_ProvideLocationDaoFactory create(Provider<AppDataBase> dbProvider) {
    return new AppModule_ProvideLocationDaoFactory(dbProvider);
  }

  public static LocationDao provideLocationDao(AppDataBase db) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideLocationDao(db));
  }
}
